# 2023-10-22: helm upgrade camunda camunda/camunda-platform --version 8.3.0
# 2023-10-24: helm upgrade camunda camunda/camunda-platform --version 8.3.1
# TODO: Replace JAVA_TOOL_OPTIONS to javaOpts

global:
  identity:
    auth:
      # Disable the Identity authentication for local development
      # it will fall back to basic-auth: demo/demo as default user
      enabled: false
  image:
    tag: 8.4.5
  elasticsearch:
    disableExporter: true
  kibanaEnabled: false

# Disable identity as part of the camunda platform core
identity:
  enabled: false
  postgresql:
    enabled: false
  keycloak:
    enabled: false

optimize:
  enabled: false

# Release label should match Helm release name
prometheusServiceMonitor:
  enabled: true
  labels:
    release: metrics

# Reduce for Zeebe and Gateway the configured replicas and with that the required resources
# to get it running locally
zeebe:
  clusterSize: 3
  partitionCount: 6
  replicationFactor: 3
  cpuThreadCount: 4
  ioThreadCount: 2
  resources:
    requests:
      cpu: 6000m
      memory: 16000Mi
    limits:
      cpu: 6000m
      memory: 16000Mi
  pvcSize: 5Gi
  persistenceType: memory
  # extraVolumes:
  #   - name: runtime
  #     emptyDir:
  #       medium: "Memory"
  # extraVolumeMounts:
  #   - name: runtime
  #     mountPath: /usr/local/zeebe/runtime
  readinessProbe:
    probePath: /actuator/health/readiness
  nodeSelector:
    camunda/app: broker
  env:
    - name: TZ
      value: "Europe/Moscow"
    # Hint from https://github.com/camunda/zeebe/issues/14853 to get rid of non-critical DNS errors in Grafana
    - name: ZEEBE_BROKER_NETWORK_ADVERTISEDHOST
      value: $(K8S_NAME).$(K8S_SERVICE_NAME)
    - name: ZEEBE_BROKER_CLUSTER_INITIALCONTACTPOINTS
      value: $(K8S_SERVICE_NAME)-0.$(K8S_SERVICE_NAME):26502, $(K8S_SERVICE_NAME)-1.$(K8S_SERVICE_NAME):26502, $(K8S_SERVICE_NAME)-2.$(K8S_SERVICE_NAME):26502
    - name: ZEEBE_BROKER_BACKPRESSURE_ENABLED
      value: "false"
    - name: ZEEBE_BROKER_BACKPRESSURE_ALGORITHM
      value: "aimd"
    - name: ZEEBE_BROKER_BACKPRESSURE_AIMD_INITIALLIMIT
      value: "1000"
    - name: ZEEBE_BROKER_BACKPRESSURE_AIMD_MINLIMIT
      value: "100"
    - name: ZEEBE_BROKER_BACKPRESSURE_AIMD_MAXLIMIT
      value: "2000"
    - name: ZEEBE_BROKER_CLUSTER_RAFT_FLUSH_ENABLED
      value: "true"
    - name: ZEEBE_BROKER_CLUSTER_RAFT_FLUSH_DELAYTIME
      value: "0s"
    - name: ZEEBE_BROKER_EXPERIMENTAL_ROCKSDB_DISABLEWAL
      value: "true"
    - name: ZEEBE_BROKER_DATA_SNAPSHOTPERIOD
      value: "1m"
    # - name: ZEEBE_BROKER_DATA_RUNTIMEDIRECTORY
    #   value: "runtime"
    - name: ZEEBE_BROKER_EXPERIMENTAL_FEATURES_ENABLEACTORMETRICS
      value: "true"
    - name: ZEEBE_BROKER_EXPERIMENTAL_FEATURES_ENABLEYIELDINGDUEDATECHECKER
      value: "true"
    - name: ZEEBE_BROKER_PROCESSING_ENABLEASYNCSCHEDULEDTASKS
      value: "true"
    - name: JAVA_TOOL_OPTIONS
      value: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/usr/local/zeebe/data -XX:ErrorFile=/usr/local/zeebe/data/zeebe_error%p.log -XX:+ExitOnOutOfMemoryError -XX:+UseShenandoahGC -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote.rmi.port=1100 -Djava.rmi.server.hostname=192.168.0.100 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false
  service:
    extraPorts:
      - name: jmx
        protocol: TCP
        port: 1099
        targetPort: 1099
      - name: rmi
        protocol: TCP
        port: 1100
        targetPort: 1100

zeebe-gateway:
  replicas: 1
  resources:
  requests:
    cpu: 1000m
    memory: 500Mi
  limits:
    cpu: 2000m
    memory: 900Mi
  nodeSelector:
    camunda/app: gateway
  env:
    - name: TZ
      value: "Europe/Moscow"
    - name: ZEEBE_GATEWAY_LONGPOLLING_ENABLED
      value: "true"
    - name: JAVA_TOOL_OPTIONS
      value: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/usr/local/zeebe/data -XX:ErrorFile=/usr/local/zeebe/data/zeebe_gateway_error%p.log -XX:+ExitOnOutOfMemoryError -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=1101 -Dcom.sun.management.jmxremote.rmi.port=1102 -Djava.rmi.server.hostname=192.168.0.100 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false

# Use values for inbound mode from here https://github.com/camunda/camunda-platform-helm/issues/976
connectors:
  enabled: false
  inbound:
    mode: "credentials"
    auth:
      existingSecret: "demo"
  image:
    repository: camunda/connectors-bundle
    tag: 8.4.5
  replicas: 1
  resources:
    requests:
      cpu: "100m"
      memory: 500Mi
    limits:
      cpu: "1000m"
      memory: 1000Mi
  nodeSelector:
    camunda/app: connectors
  env:
    - name: CAMUNDA_OPERATE_CLIENT_USERNAME
      value: "demo"
    - name: CAMUNDA_OPERATE_CLIENT_PASSWORD
      value: "demo"

# Disable tasklist (we don't need user tasks)
tasklist:
  enabled: false

operate:
  enabled: false
  logging:
    level:
      ROOT: INFO
      io.camunda.operate: INFO
  nodeSelector:
    camunda/app: operate
  resources:
    requests:
      cpu: "1000m"
      memory: "800M"
    limits:
      cpu: "1000m"
      memory: "800M"
  env:
    - name: TZ
      value: "Europe/Moscow"

# Configure elastic search to make it running for local development
elasticsearch:
  enabled: false
  image:
    repository: bitnami/elasticsearch
    tag: 8.9.2
  master:
    masterOnly: false
    replicaCount: 3
    heapSize: 768m
    persistence:
      size: 15Gi
    nodeSelector:
      camunda/app: elasticsearch
    resources:
      requests:
        cpu: "2000m"
        memory: "1536M"
      limits:
        cpu: "2000m"
        memory: "1536M"
    containerSecurityContext:
      runAsUser: 1000
    podSecurityContext:
      fsGroup: 0
  extraEnvVars:
    - name: TZ
      value: "Europe/Moscow"
  # Used when global.kibanaEnabled=true
  kibana:
    persistence:
      size: 4Gi
    image:
      repository: bitnami/kibana
      tag: 8.9.2
    nodeSelector:
      camunda/app: elasticsearch
      elk/app: kibana
    extraEnvVars:
      - name: TZ
        value: "Europe/Moscow"
